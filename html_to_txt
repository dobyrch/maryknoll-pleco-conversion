#!/usr/bin/env python3
import re
from bs4 import BeautifulSoup
from pprint import pprint
from string import ascii_uppercase

magic = '❋❋❋❋❋'
newline  = '\uEAB1'
double_newline  = newline + ' ' + newline

poj = re.compile(r'''
        (?<=[^a-zA-Z0-9])
        [abceghijklmnopstu]+
        (?P<tone>[23578])?\1?
        [abceghijklmnopstu]*
        (?=[^a-zA-Z0-9])
    ''', re.VERBOSE | re.IGNORECASE)

parens = re.compile('\(.*\)')

def poj_to_tailo(string):
    string = ' ' + string.replace('+', 'o').replace('*', f'nn{magic}') + ' '
    search_start = 1

    while match := poj.search(string, search_start):
        word = match[0]
        match_start, match_end = match.span()
        search_start = match_end

        if p := parens.search(string):
            if match_start > p.start() and match_end < p.end():
                continue

        if tone := match['tone']:
            word = word.replace(tone, '') + tone
        elif word[-1] in 'ptkh':
            word += '4'
        else:
            word += '1'

        #TODO: why not being replaced in entry for "abbess?"
        word = word.replace('Ch', 'Ts')
        word = word.replace('ch', 'ts')
        word = re.sub('O([ae])', r'U\1', word)
        word = re.sub('o([ae])', r'u\1', word)
        word = word.replace('eng', 'ing')

        string = string[:match_start] + word + string[match_end:]

    return string[1:-1].replace(magic, '')


def main():
    entries = []

    for c in ascii_uppercase:
        with open(f'src/{c}-html.html') as f:
            entries.extend(get_entries(BeautifulSoup(f, 'html.parser')))

    for entry in entries:
        print(entry)
        pass

def get_entries(soup):
    entries = []
    head = []
    rom = []
    han = []
    class_english = set()
    class_taiwanese = set()
    class_chinese = set()
    class_ignore = set()

    for style in soup.find_all('style'):
        for line in style.text.split():
            match = re.match('\.(ft[0-9]+){', line)
            if not match:
                continue

            ft = match.group(1)

            if 'Arial' in line:
                class_english.add(ft)
            elif 'TaiCooperLtBTLight' in line:
                class_taiwanese.add(ft)
            elif 'MingLiU' in line:
                class_chinese.add(ft)
            else:
                class_ignore.add(ft)

    def append_entry(head, rom, han):
        if len(head) > 1:
            #TODO: assert only one dash?
            head[0] = ''.join(s.rstrip('-') for s in head)
            del head[1:]
        # TODO: If text in parens, remove - and join
        if len(rom) > 1:
            rom[0] = ''.join(rom)
            #print(rom[0])
            del rom[1:]
        if len(han) > 1:
            han[0] = ''.join(han)
            del han[1:]

        if not head:
            head.append('FIXME')
        if not rom:
            rom.append('FIXME')
        if not han:
            han.append('FIXME')

        # TODO: Check for entries containing anything other than alphanumeric,
        # commas, parens, ellipses, etc.
        head[0] = head[0].strip()
        rom[0] = newline.join(rom[0].strip().split(', '))
        han[0] = newline.join(han[0].strip().split(','))

        rom[0] = poj_to_tailo(rom[0])

        if not head[0].startswith('-'):
            head[0], _, rest = head[0].partition(',')
            if rest:
                rest = rest.strip() + newline

            entries.append(head[0] + '\t' + rest + han[0] + newline + rom[0])
        else:
            head[0] = head[0].lstrip('- ')
            entries[-1] += double_newline + head[0] + newline + han[0] + newline + rom[0]

        #if '(' in entry[1][0] or ')' in entry[1][0]:
        #print(entry[1][0])

    lastcls = None

    for p in soup.find_all('p'):
        cls = p['class'][0]

        if cls in class_ignore:
            continue

        if p.text in ('.', ',', '…', '\xA0', '(phonetic)'):
            cls = lastcls

        if cls in class_english:
            if lastcls in class_english:
                head.append(p.text.replace('\xA0', ' '))
            else:
                if lastcls is not None:
                    append_entry(head, rom, han)
                head = [p.text.replace('\xA0', ' ')]
                rom = []
                han = []

        elif cls in class_chinese:
            han.append(p.text.replace('\xA0', ' '))
        elif cls in class_taiwanese:
            rom.append(p.text.replace('\xA0', ' '))
        else:
            assert False

        lastcls = cls

    if lastcls in class_english:
        assert False

    append_entry(head, rom, han)

    return entries

# poj -> tailo
#   - + -> o
#   - * -> nn
#   - tone numbers to end
#   - ch -> ts
#   - oa, oe -> ua, ue
#   - eng -> ing

if __name__ == '__main__':
    main()
